@use '../settings/variables' as _variables;
@use '../tools/functions/z-index' as _z-index;
@use '../tools/mixins/buttons' as _buttons;
@use '../tools/mixins/responsive' as _responsive;
@use '../tools/mixins/typography' as _typography;

.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  background-color: rgba(_variables.$core-color-foreground, 0.7);
  z-index: _z-index.z(kilo);

  &[hidden] {
    display: none;
  }

  @include _responsive.min(m) {
    justify-content: center;
  }
}

.modal__inner {
  position: relative;
  width: calc(100vw - #{_variables.$core-grid * 4});
  margin-bottom: (_variables.$core-grid * 4);
  padding: (_variables.$core-grid * 2.5) (_variables.$core-grid * 2);
  background-color: var(--color-background);
  border: 1px solid var(--color-body);

  @include _responsive.min(m) {
    width: auto;
    margin-bottom: 0;
    padding: (_variables.$core-grid * 3) (_variables.$core-grid * 2.5);
  }
}

.modal__title {
  @include _typography.text(pluto);
  color: var(--color-tertiary);
  text-transform: uppercase;
}

.modal__body {
  @include _typography.text(bodyCopy);
  color: var(--color-body);
}

.modal__key-map {
  position: relative;
  margin-bottom: (_variables.$core-grid * 2);
  padding-top: 25%;
  border: 1px solid var(--color-body);

  &:empty::before {
    content: 'Please wait a moment while your key loadsâ€¦';
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    max-width: 285px;
    padding-right: (_variables.$core-grid / 2);
    padding-left: (_variables.$core-grid / 2);
    font-family: _variables.$core-font-family;
    font-size: calc(#{_variables.$core-font-size} + 0.1vw);
    font-variation-settings: 'wght' _variables.$core-font-weight;
    line-height: _variables.$core-line-height;
    color: var(--color-tertiary);
    text-align: center;
    transform: translateY(-50%);
  }

  @include _responsive.min(m) {
    &:empty::before {
      left: 50%;
      padding-right: (_variables.$core-grid * 2);
      padding-left: (_variables.$core-grid * 2);
      transform: translate(-50%, -50%);
    }
  }
}

.modal__key-map-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.modal__basket-button {
  @include _buttons.button(primary);

  &[disabled="true"] {
    @include _buttons.button(disabled);
  }
}

.modal__close-button {
  position: absolute;
  top: (_variables.$core-grid * 1.5);
  right: _variables.$core-grid;
  width: 40px;
  height: 40px;
  padding: (_variables.$core-grid / 2);

  @include _responsive.min(m) {
    width: 44px;
    height: 44px;
  }
}

.modal__close-icon {
  width: 100%;
  height: 100%;
  fill: var(--color-primary);
  pointer-events: none;
}
