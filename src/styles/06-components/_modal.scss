@use '../01-settings/variables' as _v;
@use '../02-tools/mixins/buttons' as _btn;
@use '../02-tools/mixins/responsive' as _r;
@use '../02-tools/mixins/typography' as _ty;

.modal {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(_v.$core-color-foreground, 0.7);

  &[hidden] {
    display: none;
  }
}

.modal__inner {
  width: calc(100vw - #{_v.$core-grid * 4});
  border: 1px solid var(--color-body);

  @include _r.min(md) {
    width: auto;
  }
}

.modal__zoom,
.pinch-zoom-container {
  position: relative;
  padding-top: 100%;

  @include _r.min(md) {
    width: 50vh;
    max-width: 500px;
  }
}

.modal__picture {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  @media (hover) {
    &:hover {
      cursor: zoom-in;
    }
  }
}

.modal__image {
  height: 100%;
  background-repeat: no-repeat;
  background-size: cover;
}

.modal__zoom-text {
  &::after {
    @include _ty.text(xs);
    content: 'Pinch to zoom';
    display: block;
    width: 100%;
    text-align: center;

    @media (hover) {
      content: 'Click and move to zoom';
    }
  }
}

.modal__image-zoom {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat;
  background-size: contain;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.modal__key-map {
  padding-top: 25%;
  border: 1px solid var(--color-body);

  &:empty::before {
    content: 'Please wait a moment while your key loadsâ€¦';
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    max-width: 285px;
    padding-right: (_v.$core-grid / 2);
    padding-left: (_v.$core-grid / 2);
    font-family: _v.$core-font-family;
    font-size: calc(#{_v.$core-font-size} + 0.1vw);
    font-variation-settings: 'wght' _v.$core-font-weight;
    line-height: _v.$core-line-height;
    color: var(--color-tertiary);
    text-align: center;
    transform: translateY(-50%);
    box-sizing: border-box;
  }

  @include _r.min(md) {
    &:empty::before {
      left: 50%;
      padding-right: (_v.$core-grid * 2);
      padding-left: (_v.$core-grid * 2);
      transform: translate(-50%, -50%);
    }
  }
}

.modal__key-map--active {
  padding-top: 0;
  border-color: transparent;
}

.modal__key-map-image {
  width: auto;
  max-height: 150px;
}

.modal__basket-button {
  &[disabled='true'] {
    @include _btn.button(disabled);
  }
}

.modal__close-button {
  top: 16px;
  right: _v.$core-grid;
  width: 40px;
  height: 40px;

  @include _r.min(md) {
    top: 20px;
    right: 20px;
    width: 44px;
    height: 44px;
  }
}

.modal__close-icon {
  width: 100%;
  height: 100%;
  fill: var(--color-primary);
}
